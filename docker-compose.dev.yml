version: '3.3'

services:
  ### Frontend #############################
  client:
    image: ${PROJECT}_client
    container_name: ${PROJECT}-client
    stdin_open: true
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      - NEXT_PUBLIC_KC_AUTH_URL=${KC_AUTH_URL}
      - NEXT_PUBLIC_KC_AUTH_REALM=${KC_AUTH_REALM}
      - NEXT_PUBLIC_KC_AUTH_CLIENT_ID=${KC_AUTH_CLIENT_ID}
    expose:
      - '3000'
    ports:
      - '3000:3000'
    volumes:
      # Binds the application folder from the host inside the container for fast changes
      - ./client:/usr/src/app
      # Ignores/Hides the node_modules from the bind on the host allowing the node_modules
      # from inside the container to be used instead
      - /usr/src/app/node_modules
    networks:
      - default

  ### API #############################
  api:
    image: ${PROJECT}-api
    container_name: ${PROJECT}-api
    stdin_open: true
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      - POSTGRESQL_SERVER=${POSTGRESQL_SERVER}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - PORTGRES_PORT=${PORTGRES_PORT}
      - KC_AUTH_URL=${KC_AUTH_URL}
      - KC_AUTH_REALM=${KC_AUTH_REALM}
      - KC_AUTH_CLIENT_ID=${KC_AUTH_CLIENT_ID}
      - APP_PORT=8080
    ports:
      - '8080:8080'
      - '9229:9229'
    volumes:
      # Binds the application folder from the host inside the container for fast changes
      - ./api:/usr/src/app
      # Ignores/Hides the node_modules from the bind on the host allowing the node_modules
      # from inside the container to be used instead
      - /usr/src/app/node_modules
    depends_on:
      - database
    networks:
      - default

  ### Database #############################
  database:
    image: postgres:12-alpine
    container_name: ${PROJECT}_db
    volumes:
      - ./database:/database
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - PGDATA=./database/postgresql/data/pgdata
    restart: always
    networks:
      - default

networks:
  default:
    driver: 'bridge'
